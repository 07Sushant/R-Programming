install.packages("languageserver")
q()
chooseCRANmirror()
q()
clear
q()
c(1,2)->>a
print(a)
# c(1,2)->>a
a<<-3.4
print(a)
print(a)
# Vector is divided into 2 types
#atomic vector and list
#atomic vector: contains the elements of same data type
#list: contains the elements of different data type
#we have differenet methods to create a vector
#1; by using c()
#: by using seq()
#3: by usning : operator
a<-c(1,2,3,4)
a
b<-seq(10,20)
b
c<-20:30
c
a<-c(1,2,3,4)
a
b<-seq(10,20)
b
c<-20:30
c
setwd("~/")
clear
q()
1 2 3 4 5 6
print("Helloworld")
# Arrays
my_array<-array(data = c(3,5,7,8,9,8,1,2,3), dim = c(3,3))
# print(my_array)
# Creating 1D array using userinput
print("Enter the element seperated using space: ")
user_input<- readline()
print(array_1d)
# Arrays
my_array<-array(data = c(3,5,7,8,9,8,1,2,3), dim = c(3,3))
# print(my_array)
# Creating 1D array using userinput
print("Enter the element seperated using space: ")
user_input<- readline()
print(array_1d)
# Arrays
my_array<-array(data = c(3,5,7,8,9,8,1,2,3), dim = c(3,3))
# print(my_array)
# Creating 1D array using userinput
print("Enter the element seperated using space: ")
user_input<- readline()
print(array_1d)
# Arrays
my_array<-array(data = c(3,5,7,8,9,8,1,2,3), dim = c(3,3))
# print(my_array)
# Creating 1D array using userinput
print("Enter the element seperated using space: ")
user_input<- readline()
print(array_1d)
print("Enter the element separated using space: ")
user_input<- readline()
print(array_1d)
print("Enter the element separated using space: ")
user_input<- readline()
array_1d<- as.numeric(strsplit(user_input, " ")[[1]])
print(array_1d)
print(array_1d)
# Creating 1D array
array_1d<-c(1,2,3,4,5)
# Adding an element at the end
array_1d <-c (array_1d,6)
# Creating 1D array
array_1d<-c(1,2,3,4,5)
# Adding an element at the end
array_1d <-c (array_1d,6)
# Delete the element at the index
array_1d <- array_1d[-3]
# Access at index
array_1d <- array_1d[2]
# Replace the element at the index
array_1d[4]<-10
# Losseless deletion
# Delete the element at index 3 without losing data
array_1d<-c(1,2,3,4,5)
array_1d <- c(array_1d[1:2], array_1d[4:length(array_1d)])
# Print the updated array
print(array_1d)
my_matrix <- matrix(c(1,2,3,4,5,6) , nrow = 2, ncol = 3)
print(my_matrix)
a<-list(c("Ankit","Mani", "Sushant","Namit"),
list("MBA", "MCA", "BBA", "Btech"),
c(10,8,15,7),
list("Delhi", "Mumbai", "jammu", "Kashmir"))
a[[3]] <- a[[3]] != "Ankit"[a[[3]] != 8]
a<-data.frame(emp_id=c(1,2,4,6,8),emp_name=c("Sahil","Ankit","Anil","Namit","Raj"),
emp_salary=c(10000,98000,110000,15000,12000),
emp_address=c("Delhi","Mumbai","Rajasthan","Punjab","Goa"))
subset(a,emp_salary>10000,select=c(-emp_name,-emp_address))
a<-c(1,2,3,4,5,6,)
a<-c(1,2,3,4,5,6)
a1<-c(7,8,9,10,11,12)
result<-array(a,a1,dim = 3,2,2)
clear
setwd("C:/Local volume/Programming/R-Programming")
setwd("C:/Local volume/Programming/R-Programming")
setwd("C:\Local volume\Programming\R-Programming")
